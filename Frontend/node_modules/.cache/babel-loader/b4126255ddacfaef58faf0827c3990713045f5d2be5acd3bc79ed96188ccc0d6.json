{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\josga\\\\Desktop\\\\CalendarP\\\\Frontend\\\\src\\\\context\\\\ScheduleContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// SubjectContext.tsx\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubjectContext = /*#__PURE__*/createContext(undefined);\nexport const SubjectProvider = ({\n  children\n}) => {\n  _s();\n  const [firstWeek, setFirstWeek] = useState([]);\n  const [secondWeek, setSecondWeek] = useState([]);\n  const addSubjectFirstWeek = (subject, schedule) => {\n    const updatedSubjects = firstWeek.map(s => {\n      if (s.id === subject.id) {\n        // Clonar el sujeto existente y actualizar su horario\n        const updatedSubject = {\n          ...s\n        };\n        updatedSubject.schedules.set(schedule.grupo_id, schedule);\n        return updatedSubject;\n      }\n      return s;\n    });\n\n    // Verificar si el sujeto ya estaba en el estado\n    const subjectExists = firstWeek.some(s => s.id === subject.id);\n    if (!subjectExists) {\n      // Crear un nuevo sujeto con un Map para los horarios\n      const newSubject = {\n        ...subject,\n        schedules: new Map().set(schedule.grupo_id, schedule)\n      };\n      updatedSubjects.push(newSubject);\n    }\n    setFirstWeek(updatedSubjects);\n  };\n  const addSubjectSecondWeek = (subject, schedule) => {\n    const updatedSubjects = secondWeek.map(s => {\n      if (s.id === subject.id) {\n        // Clonar el sujeto existente y actualizar su horario\n        const updatedSubject = {\n          ...s\n        };\n        updatedSubject.schedules.set(schedule.grupo_id, schedule);\n        return updatedSubject;\n      }\n      return s;\n    });\n\n    // Verificar si el sujeto ya estaba en el estado\n    const subjectExists = secondWeek.some(s => s.id === subject.id);\n    if (!subjectExists) {\n      // Crear un nuevo sujeto con un Map para los horarios\n      const newSubject = {\n        ...subject,\n        schedules: new Map().set(schedule.grupo_id, schedule)\n      };\n      updatedSubjects.push(newSubject);\n    }\n    setSecondWeek(updatedSubjects);\n  };\n  return /*#__PURE__*/_jsxDEV(SubjectContext.Provider, {\n    value: {\n      firstWeek,\n      secondWeek,\n      addSubjectFirstWeek,\n      addSubjectSecondWeek\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(SubjectProvider, \"/rNX8tLKU75WheODCzdLpO4T5Jw=\");\n_c = SubjectProvider;\nexport const useSubject = () => {\n  _s2();\n  const context = useContext(SubjectContext);\n  if (!context) {\n    throw new Error('useSubject must be used within a SubjectProvider');\n  }\n  return context;\n};\n_s2(useSubject, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"SubjectProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","SubjectContext","undefined","SubjectProvider","children","_s","firstWeek","setFirstWeek","secondWeek","setSecondWeek","addSubjectFirstWeek","subject","schedule","updatedSubjects","map","s","id","updatedSubject","schedules","set","grupo_id","subjectExists","some","newSubject","Map","push","addSubjectSecondWeek","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSubject","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/josga/Desktop/CalendarP/Frontend/src/context/ScheduleContext.tsx"],"sourcesContent":["// SubjectContext.tsx\nimport React, { createContext, useState, useContext } from 'react';\nimport {\n  Subject,\n  Schedule,\n  SubjectSelectedSchedule,\n} from './../types/types.ts';\n\ninterface SubjectContextType {\n  firstWeek: Subject[];\n  secondWeek: Subject[];\n  addSubject: (subject: Subject, schedule: Schedule) => void;\n}\n\nconst SubjectContext = createContext<SubjectContextType | undefined>(undefined);\n\nexport const SubjectProvider: React.FC = ({ children }) => {\n  const [firstWeek, setFirstWeek] = useState<SubjectSelectedSchedule>([]);\n  const [secondWeek, setSecondWeek] = useState<SubjectSelectedSchedule>([]);\n\n  const addSubjectFirstWeek: (subject: Subject, schedule: Schedule) => void = (\n    subject,\n    schedule\n  ) => {\n    const updatedSubjects = firstWeek.map((s: SubjectSelectedSchedule) => {\n      if (s.id === subject.id) {\n        // Clonar el sujeto existente y actualizar su horario\n        const updatedSubject = { ...s };\n        updatedSubject.schedules.set(schedule.grupo_id, schedule);\n        return updatedSubject;\n      }\n      return s;\n    });\n\n    // Verificar si el sujeto ya estaba en el estado\n    const subjectExists = firstWeek.some((s) => s.id === subject.id);\n\n    if (!subjectExists) {\n      // Crear un nuevo sujeto con un Map para los horarios\n      const newSubject: SubjectSelectedSchedule = {\n        ...subject,\n        schedules: new Map<string, Schedule>().set(schedule.grupo_id, schedule),\n      };\n      updatedSubjects.push(newSubject);\n    }\n\n    setFirstWeek(updatedSubjects);\n  };\n\n  const addSubjectSecondWeek: (subject: Subject, schedule: Schedule) => void = (\n    subject,\n    schedule\n  ) => {\n    const updatedSubjects = secondWeek.map((s: SubjectSelectedSchedule) => {\n      if (s.id === subject.id) {\n        // Clonar el sujeto existente y actualizar su horario\n        const updatedSubject = { ...s };\n        updatedSubject.schedules.set(schedule.grupo_id, schedule);\n        return updatedSubject;\n      }\n      return s;\n    });\n\n    // Verificar si el sujeto ya estaba en el estado\n    const subjectExists = secondWeek.some((s) => s.id === subject.id);\n\n    if (!subjectExists) {\n      // Crear un nuevo sujeto con un Map para los horarios\n      const newSubject: SubjectSelectedSchedule = {\n        ...subject,\n        schedules: new Map<string, Schedule>().set(schedule.grupo_id, schedule),\n      };\n      updatedSubjects.push(newSubject);\n    }\n\n    setSecondWeek(updatedSubjects);\n  };\n\n  return (\n    <SubjectContext.Provider\n      value={{\n        firstWeek,\n        secondWeek,\n        addSubjectFirstWeek,\n        addSubjectSecondWeek,\n      }}\n    >\n      {children}\n    </SubjectContext.Provider>\n  );\n};\n\nexport const useSubject = () => {\n  const context = useContext(SubjectContext);\n  if (!context) {\n    throw new Error('useSubject must be used within a SubjectProvider');\n  }\n  return context;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}